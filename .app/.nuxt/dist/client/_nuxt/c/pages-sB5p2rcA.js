import{Z as e,d as a}from"../e/entry-8qgg5CL-.js";function t(){return{...function(){const a=e().public.apiPath;return{createPage:async function(e){return await $fetch(a+"/api/admin/pages",{method:"POST",credentials:"include",headers:{"client-platform":"browser"},body:{data:e}})},updatePage:async function(e,t){return await $fetch(a+`/api/admin/pages/${e}`,{method:"PUT",credentials:"include",headers:{"client-platform":"browser"},body:{data:t}})},deletePage:async function(e){return await $fetch(a+`/api/admin/pages/${e}`,{method:"DELETE",credentials:"include",headers:{"client-platform":"browser"}})}}}(),...function(){const a=e().public.apiPath;return{getPages:async function(){return await $fetch(a+"/api/pages",{credentials:"include",headers:{"client-platform":"browser"}})},getPage:async function(e){return await $fetch(a+`/api/pages/${e}`,{credentials:"include",headers:{"client-platform":"browser"}})}}}()}}const n=a({id:"pages",state:()=>({pages:[],currentPage:null,loading:!1}),getters:{pageCount:e=>e.pages.length},actions:{async fetchPages(){this.loading=!0;const{getPages:e}=t(),a=await e();"success"===a.status&&(this.pages=a.data.result),this.loading=!1},async fetchPage(e){const{getPage:a}=t(),n=await a(e);"success"===n.status&&(this.currentPage=n.data.result)},getPageBySlug(e){return this.pages.find((a=>a.slug===e))}}});export{t as a,n as u};
