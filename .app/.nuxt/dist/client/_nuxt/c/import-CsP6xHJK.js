import{a as e,z as a,r as l,ad as t,c as r,ac as n,b as o,e as s,w as d,o as u,f as i,t as m,u as c,q as p,x as v,X as y}from"../e/entry-8qgg5CL-.js";import{_ as b}from"./BaseInput.vue-iInHQMIA.js";import{_ as h}from"./BaseListbox.vue-1Dy9Ui3z.js";import{_ as g}from"./TairoContentWrapper.vue-JqAKR4O_.js";import{u as k}from"./useEcosystem-9eBUNbsT.js";import{u as f}from"./admin-Nwh6nXjV.js";import{z as V,u as B,t as x,F as T}from"./vee-validate.esm-n59zZCC5.js";import"./input-id-wZ-Ta08j.js";import"./BaseIconBox.vue-qjQCKz6R.js";import"./BaseAvatar.vue-XYSxxLJP.js";import"./use-text-value-9iwzs_EA.js";const C={class:"text-lg font-semibold"},w={class:"p-4 md:p-6"},_={class:"mx-auto w-full text-start"},E={class:"grid gap-5 grid-cols-1 sm:grid-cols-2"},P=i("small",null,[i("span",{class:"text-warning-500 text-xs"}," * Please make sure the smart contract address is correct ")],-1),U=i("small",null,[i("span",{class:"text-warning-500 text-xs"}," * Please make sure the token network is correct, e.g. mainnet, ropsten, rinkeby, kovan, goerli ")],-1),j=i("small",null,[i("span",{class:"text-warning-500 text-xs"}," * Please make sure the token type is correct, e.g. ERC20, BEP20, TRC20 ")],-1),M=i("small",null,[i("span",{class:"text-warning-500 text-xs"}," * Please make sure the token contract type is correct, its either PERMIT or NO_PERMIT, you can check the token contract type on the token contract source code ")],-1),I={class:"p-4 md:p-6"},q=e({__name:"import",setup(e){const q=a(),{chain:N}=q.params,R=f(),{importAdminToken:A}=k(),S=l(!1),{toast:$}=t(),D=V.object({name:V.string().nonempty("Name is required"),currency:V.string().nonempty("Currency is required").refine((e=>e.length<=11),{message:"Currency can't be longer than 11 characters"}).refine((e=>/^[A-Z0-9]+$/.test(e)),{message:"Currency must be all uppercase and contain only alphabets and numbers, no spaces"}),decimals:V.number().int().positive("Decimals must be a positive number"),contract:V.string().nonempty("Contract is required"),contractType:V.object({label:V.string().nonempty("Contract type label is required"),value:V.string().nonempty("Contract type value is required")}),network:V.string().nonempty("Network is required"),type:V.string().nonempty("Type is required")}),F=r((()=>({name:"",currency:"",decimals:18,contract:"",contractType:{label:"Permit",value:"PERMIT"},network:"",type:""}))),{handleSubmit:O,isSubmitting:z,resetForm:L}=B({validationSchema:x(D),initialValues:F}),Q=n(),W=O((async e=>{z.value=!0;const{name:a,currency:l,network:t,type:r,contract:n,decimals:o,contractType:s}=e;try{const e=await A(a,l,N,t,r,n,o,s.value);$.response(e),"success"===e.status&&(await R.fetchTokensAll(),S.value=!1,L(),Q.push(`/admin/extensions/ecosystem/tokens/${N}`))}catch(d){$.danger(d)}z.value=!1}));return(e,a)=>{const l=v,t=y,r=b,n=h,k=g;return u(),o("div",null,[s(k,null,{left:d((()=>[i("div",C," Importing New "+m(c(N))+" Tokens ",1)])),right:d((()=>[s(t,{to:`/admin/extensions/ecosystem/tokens/${c(N)}`,color:"muted",flavor:"pastel"},{default:d((()=>[s(l,{name:"line-md:chevron-left",class:"me-2 h-4 w-4"}),p(" Back ")])),_:1},8,["to"])])),default:d((()=>[i("div",w,[i("div",_,[i("div",E,[s(c(T),{name:"name"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"text",label:"Token Name",placeholder:"Enter token name",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"])])),_:1}),s(c(T),{name:"currency"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"text",label:"Token Symbol",placeholder:"Enter token symbol",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"])])),_:1}),i("div",null,[s(c(T),{name:"contract"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"text",label:"Token Contract Address",placeholder:"Enter token contract address",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"]),P])),_:1})]),i("div",null,[s(c(T),{name:"network"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"text",label:"Token Network",placeholder:"Enter token network",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"]),U])),_:1})]),i("div",null,[s(c(T),{name:"type"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"text",label:"Token Type",placeholder:"Enter token type",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"]),j])),_:1})]),i("div",null,[s(c(T),{name:"contractType"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(n,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),label:"Token Contract Type",items:[{label:"Permit",value:"PERMIT"},{label:"No Permit",value:"NO_PERMIT"}],properties:{label:"label",value:"value"},onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"]),M])),_:1})]),s(c(T),{name:"decimals"},{default:d((({field:e,errorMessage:a,handleChange:l,handleBlur:t})=>[s(r,{modelValue:e.value,"onUpdate:modelValue":[a=>e.value=a,l],error:a,disabled:c(z),type:"number",label:"Token Decimals",placeholder:"Enter token decimals",onBlur:t},null,8,["modelValue","onUpdate:modelValue","error","disabled","onBlur"])])),_:1})])])]),i("div",I,[s(t,{color:"primary",flavor:"solid",onClick:a[0]||(a[0]=e=>c(W)()),disabled:c(z),loading:c(z)},{default:d((()=>[p(m(e.$t("Import Token")),1)])),_:1},8,["disabled","loading"])])])),_:1})])}}});export{q as default};
