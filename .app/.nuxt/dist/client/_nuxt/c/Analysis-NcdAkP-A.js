import{a as e,ap as t,c as a,Q as s,E as r,aL as n,r as o,J as l,o as c,b as i,e as u,w as d,u as p,t as g,f as h,q as m,O as k,k as f,F as y,B as v,n as w,af as x,_ as b,X as T,C as _,s as S,c7 as M,c5 as C,y as j}from"../e/entry-8qgg5CL-.js";import{_ as F,a as V}from"./TairoFlexTableRow.vue-SSWkvezF.js";import{_ as O,a as D}from"./FlexTableRow.vue-LmGXINIn.js";import{_ as q}from"./FlexTableCell.vue-Rbj2Whgl.js";import{_ as E}from"./TairoFlexTable-zdoraqRc.js";import{_ as P}from"./TairoContentWrapper.vue-JqAKR4O_.js";import{u as A}from"./market-Bq5Nv6Cu.js";import{u as J}from"./socket--t7FR4dG.js";import{u as N}from"./useExchange-VMAYQu3P.js";import{u as $}from"./market-OqEbt887.js";import{u as L}from"./socket-uQEypT2z.js";const B=e=>(M("data-v-62db14fa"),e=e(),C(),e),R={class:"my-10"},z={class:"flex xs:flex-col sm:flex-row w-full gap-2 z-40"},U={class:"w-full sm:pt-3"},G={key:0,class:"table-responsive"},H={class:"table"},I=B((()=>h("thead",null,[h("tr",null,[h("th",{class:"text-start market-col"},"Market"),h("th",{class:"price-col"},"Price"),h("th",{class:"change-col"},"Change"),h("th",{class:"volume-col"},"Volume"),h("th",{class:"text-end action-col"},"Action")])],-1))),W=[B((()=>h("td",{colspan:"5"},[h("div",{class:"placeholder",style:{height:"20px"}})],-1)))],K={class:"text-start market-col"},Q={class:"d-flex justify-content-start gap-1"},X=["src"],Y={key:0},Z={key:1,class:"placeholder",style:{height:"20px"}},ee={key:0},te={key:1,class:"placeholder",style:{height:"20px"}},ae={class:"volume-col"},se={key:0},re={key:1,class:"placeholder",style:{height:"20px"}},ne={class:"text-end action-col"},oe={key:0},le={key:0},ce={key:0},ie=j(e({__name:"Analysis",props:{isBootstrap:{type:Boolean,default:!1,required:!1}},setup(e){const M=L(),C=A(),j=J(),B=$(),ie=t(),ue=a((()=>ie.extensionsUser)),de=a((()=>ue.value.ecosystem)),pe=s(),ge=a((()=>pe.settings)),he=a((()=>C.markets.some((e=>e.is_hot)))),me=a((()=>C.markets.some((e=>e.is_trending))));r((async()=>{await(async()=>{0===ie.extensions.length&&await ie.fetchExtensionsUser(),C.loading=!0,0===C.markets.length&&ge.value?.spot_exchange&&await C.fetchMarkets(),C.loading=!1,de.value&&0===B.markets.length&&(await B.fetchMarkets(),B.markets.forEach((e=>{e.is_eco=!0;const t=C.markets.findIndex((t=>t.symbol===e.symbol));-1!==t?C.markets[t]=e:C.markets.push(e)})))})(),ge.value?.spot_exchange&&(await we(),ve.value&&j.createSocket("tickers")),de.value&&(await M.createSocket("exchange"),_e()),window.addEventListener("beforeunload",xe)})),n((()=>{ve.value&&xe(),window.removeEventListener("beforeunload",xe)}));const ke=o(me.value?"trending":he.value?"hot":"gainers"),fe=a((()=>{const e=C.markets;switch(ke.value){case"trending":return e.filter((e=>e.is_trending)).sort(((e,t)=>parseFloat(t.quoteVolume)-parseFloat(e.quoteVolume))).slice(0,10);case"hot":return e.filter((e=>e.is_hot)).sort(((e,t)=>parseFloat(t.quoteVolume)-parseFloat(e.quoteVolume))).slice(0,10);case"gainers":return e.sort(((e,t)=>parseFloat(t.change)-parseFloat(e.change))).slice(0,10);case"losers":return e.sort(((e,t)=>parseFloat(e.change)-parseFloat(t.change))).slice(0,10);default:return e}})),{getTickers:ye}=N(),ve=o(!1),we=async()=>{try{const e=C.markets.map((e=>({symbol:e.symbol,price:e.price}))),t=await ye();if("success"===t.status){ve.value=!0,j.isConnected=!0;const a={data:JSON.stringify({watchTickers:t.data.result}),previousMarkets:e};be.postMessage(JSON.stringify(a))}}catch(e){j.isConnected=!1,console.error("Error initializing worker and tickers:",e)}},xe=async()=>{ge.value?.spot_exchange&&j.closeSocket("tickers"),de.value&&(await Se(),await M.closeSocket("exchange")),be.terminate()};const be=new Worker(URL.createObjectURL(new Blob(["\nfunction formatChange(change) {\n  if (change < 0.01 && change > -0.01) {\n    return { value: '0.00', status: 'text-gray-500 dark:text-gray-500' };\n  }\n  return {\n    value: change,\n    status: change > 0 ? 'text-green-500 dark:text-green-500' : 'text-red-500 dark:text-red-500'\n  };\n}\n\nself.onmessage = (event) => {\n  const { data, isEco, previousMarkets } = JSON.parse(event.data);\n  let processedData = null;\n\n  if (isEco) {\n    processedData = {};\n    for (const [symbol, tickerData] of Object.entries(data)) {\n      processedData[symbol] = processEcoTicker(tickerData);\n    }\n  } else {\n    const tickers = JSON.parse(data);\n    processedData = processStandardTicker(tickers.watchTickers, previousMarkets);\n  }\n\n  self.postMessage(JSON.stringify(processedData));\n};\n\n\nfunction processEcoTicker(watchTicker) {\n  if (!Array.isArray(watchTicker) || watchTicker.length === 0) {\n    return;\n  }\n\n  const latestTicker = watchTicker[watchTicker.length - 1];\n  const oldestTicker = watchTicker[0];\n  const percentage = ((latestTicker.close - oldestTicker.open) / oldestTicker.open) * 100;\n  const changeData = formatChange(percentage.toFixed(2));\n  const change = changeData.value;\n  const changeStatus = changeData.status;\n\n    priceStatus = latestTicker.close > oldestTicker.close\n      ? 'text-green-500 dark:text-green-500'\n      : latestTicker.close < oldestTicker.close\n      ? 'text-red-500 dark:text-red-500'\n      : '';\n\n  return {\n    price: latestTicker.close,\n    change: change > 0 ? '+' + change : change,\n    baseVolume: latestTicker.volume,\n    quoteVolume: latestTicker.volume * latestTicker.close,\n    changeStatus,\n    priceStatus,\n  };\n}\n\nfunction processStandardTicker(watchTickers, previousMarkets) {\n  if (!watchTickers) return [];\n\n  return Object.entries(watchTickers).map(([symbol, tickerData]) => {\n    const { last: price, baseVolume, quoteVolume, change } = tickerData;\n    const previousMarket = previousMarkets.find(m => m.symbol === symbol);\n\n    const formattedChange = formatChange(change);\n    const priceStatus = getPriceStatus(previousMarket, price);\n\n    return {\n      symbol,\n      price,\n      change: formattedChange.value > 0 ? '+' + formattedChange.value : formattedChange.value,\n      priceStatus,\n      changeStatus: formattedChange.status,\n      baseVolume,\n      quoteVolume,\n    };\n  });\n}\n\nfunction formatChange(change) {\n  const status = change > 0 ? 'text-green-500 dark:text-green-500'\n              : change < 0 ? 'text-red-500 dark:text-red-500'\n              : 'text-gray-500 dark:text-gray-500';\n\n  return { value: Number(change).toFixed(2), status };\n}\n\nfunction getPriceStatus(previousMarket, currentPrice) {\n  if (!previousMarket) return '';\n\n  const { price: previousPrice } = previousMarket;\n  return previousPrice < currentPrice ? 'text-green-500 dark:text-green-500'\n       : previousPrice > currentPrice ? 'text-red-500 dark:text-red-500'\n       : '';\n}\n          "],{type:"text/javascript"})));l((()=>j.tickersData),(e=>{if(!e)return;const t=C.markets.map((e=>({symbol:e.symbol,price:e.price})));be.postMessage(JSON.stringify({data:e,isEco:!1,previousMarkets:t}))}),{immediate:!0});const Te=o({});l((()=>M.tickers),(e=>{if(e){for(const[t,a]of Object.entries(e))Te.value[t]?(Array.isArray(a)?Te.value[t].push(...a):Te.value[t].push(a),Te.value[t]=Te.value[t].slice(-2)):Te.value[t]=Array.isArray(a)?[...a]:[a];be.postMessage(JSON.stringify({data:Te.value,isEco:!0}))}}),{immediate:!0}),l((()=>M.isSocketOpen),(e=>{e?_e():Se()}));const _e=async()=>{M.isSocketOpen&&await M.subscribe("exchange",{method:"tickers"})},Se=()=>{M.unsubscribe("exchange",{method:"tickers"})};be.onmessage=e=>{const t=JSON.parse(e.data);C.appendMarketData(t)};const Me=a((()=>{switch(ke.value){case"trending":return"Trending Markets";case"hot":return"Hot Markets";case"gainers":return"Top Gainers";case"losers":return"Top Losers";default:return"Markets"}}));function Ce(e){return e>=1e9?(e/1e9).toFixed(1)+"B":e>=1e6?(e/1e6).toFixed(1)+"M":e>=1e3?(e/1e3).toFixed(0)+"K":e.toFixed(2).toString()}return(t,a)=>{const s=b,r=T,n=_,o=S,l=F,M=V,j=O,A=q,J=D,N=E,$=P;return c(),i("div",R,[u($,null,{left:d((()=>[u(s,{tag:"h2",size:"xl",weight:"bold"},{default:d((()=>[h("span",null,g(p(Me)),1)])),_:1})])),right:d((()=>[h("div",z,[p(me)?(c(),k(r,{key:0,onClick:a[0]||(a[0]=e=>ke.value="trending"),color:"trending"===p(ke)?"warning":"",flavor:"pastel",condensed:""},{default:d((()=>[m(g(t.$t("Trending")),1)])),_:1},8,["color"])):f("",!0),p(he)?(c(),k(r,{key:1,onClick:a[1]||(a[1]=e=>ke.value="hot"),color:"hot"===p(ke)?"warning":"",flavor:"pastel",condensed:""},{default:d((()=>[m(g(t.$t("Hot")),1)])),_:1},8,["color"])):f("",!0),u(r,{onClick:a[2]||(a[2]=e=>ke.value="gainers"),color:"gainers"===p(ke)?"warning":"",flavor:"pastel",condensed:""},{default:d((()=>[m(g(t.$t("Top Gainers")),1)])),_:1},8,["color"]),u(r,{onClick:a[3]||(a[3]=e=>ke.value="losers"),color:"losers"===p(ke)?"warning":"",flavor:"pastel",condensed:""},{default:d((()=>[m(g(t.$t("Top Losers")),1)])),_:1},8,["color"])])])),default:d((()=>[h("div",U,[e.isBootstrap?(c(),i("div",G,[h("table",H,[I,h("tbody",null,[p(C).loading?(c(),i(y,{key:0},v(5,(e=>h("tr",{key:e},W))),64)):(c(!0),i(y,{key:1},v(p(fe),((e,a)=>{return c(),i("tr",{key:e.id},[h("td",K,[h("div",Q,[h("img",{src:`/img/crypto/${s=e.symbol.toLowerCase(),s.split("/")[0]}.png`,class:"h-6 w-6 rounded-full mr-2"},null,8,X),m(" "+g(e.symbol),1)])]),h("td",{class:w(["price-col",e.priceStatus])},[e.price?(c(),i("span",Y,g(e.price),1)):(c(),i("div",Z))],2),h("td",{class:w(["change-col",e.changeStatus])},[e.change?(c(),i("span",ee,g(e.change)+"%",1)):(c(),i("div",te))],2),h("td",ae,[e.quoteVolume?(c(),i("span",se,g(Ce(e.quoteVolume)),1)):(c(),i("div",re))]),h("td",ne,[u(n,{to:`/trade/${e.symbol}`},{default:d((()=>[u(r,{condensed:"",color:"success",flavor:"outline"},{default:d((()=>[m(g(t.$t("Trade")),1)])),_:1})])),_:2},1032,["to"])])]);var s})),128))])])])):(c(),k(N,{key:1,class:"md:pt-0 sm:pt-5 md:mt-0 sm:mt-5 z-10"},{default:d((()=>[u(x,{"enter-active-class":"transform-gpu","enter-from-class":"opacity-0 translate-y-2","enter-to-class":"opacity-100 translate-y-0","leave-active-class":"transform-gpu","leave-from-class":"opacity-100 translate-y-0","leave-to-class":"opacity-0 translate-y-2"},{default:d((()=>[p(C).loading?(c(),i(y,{key:0},v(5,(e=>u(M,{key:e},{start:d((()=>[u(l,{type:"grow",class:"md:justify-start","data-content":"Symbol"},{default:d((()=>[u(o,{class:"h-[46px] w-[46px] shrink-0 rounded-xl"})])),_:1})])),end:d((()=>[u(l,{class:"text-end md:text-start","data-content":"Status",light:""},{default:d((()=>[u(o,{class:"h-3 w-24 rounded-lg"})])),_:1}),u(l,{class:"text-end md:text-start","data-content":"Status",light:""},{default:d((()=>[u(o,{class:"h-3 w-24 rounded-lg"})])),_:1}),u(l,{class:"text-end md:text-start","data-content":"Status",light:""},{default:d((()=>[u(o,{class:"h-3 w-24 rounded-lg"})])),_:1}),u(l,{type:"grow",class:"md:justify-end text-end","data-content":"Actions"},{default:d((()=>[u(o,{class:"h-8 w-16 rounded-lg"})])),_:1})])),_:2},1024))),64)):(c(!0),i(y,{key:1},v(p(fe),((e,a)=>(c(),k(J,{key:e.id,spaced:""},{start:d((()=>[u(j,{label:"Market","hide-label":a>0,title:e.symbol},null,8,["hide-label","title"])])),end:d((()=>[u(A,{label:"Price","hide-label":a>0,class:w(["w-full sm:w-28 md:w-36 lg:w-40",e.priceStatus])},{default:d((()=>[e.price?(c(),i("span",oe,g(e.price),1)):(c(),k(o,{key:1,class:"h-3 w-16 rounded-lg"}))])),_:2},1032,["hide-label","class"]),u(A,{label:"24h Change","hide-label":a>0,class:w(["w-full sm:w-28 md:w-36 lg:w-40",e.changeStatus])},{default:d((()=>[e.change?(c(),i("span",le,g(e.change)+"%",1)):(c(),k(o,{key:1,class:"h-3 w-16 rounded-lg"}))])),_:2},1032,["hide-label","class"]),u(A,{label:"Volume","hide-label":a>0,class:"w-full sm:w-28 md:w-36 lg:w-40"},{default:d((()=>[e.quoteVolume?(c(),i("span",ce,g(Ce(e.quoteVolume)),1)):(c(),k(o,{key:1,class:"h-3 w-16 rounded-lg"}))])),_:2},1032,["hide-label"]),u(A,{label:"action","hide-label":a>0,class:"w-full sm:w-28 md:w-36 lg:w-40"},{default:d((()=>[u(n,{to:`/trade/${e.symbol}`},{default:d((()=>[u(r,{condensed:"",color:"success",flavor:"outline"},{default:d((()=>[m(g(t.$t("Trade")),1)])),_:1})])),_:2},1032,["to"])])),_:2},1032,["hide-label"])])),_:2},1024)))),128))])),_:1})])),_:1}))])])),_:1})])}}}),[["__scopeId","data-v-62db14fa"]]);export{ie as _};
