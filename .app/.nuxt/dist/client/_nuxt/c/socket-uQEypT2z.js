import{d as s,Z as t}from"../e/entry-8qgg5CL-.js";const e=s("ecosystemSocket",{state:()=>({sockets:{},deposits:null,depositConnected:!1,orders:null,orderbook:null,candles:null,tickers:null,ticker:null,intentionalClosure:{},isSocketOpen:{},subscriptions:{}}),actions:{createSocket(s){if(this.intentionalClosure[s]=!1,this.isSocketOpen[s])return;const e=t(),i=new WebSocket(`${e.public.appWebSocketUrl}/ecosystem/${s}`);i.onopen=()=>{this.isSocketOpen={...this.isSocketOpen,[s]:!0}},i.onmessage=t=>{const e=JSON.parse(t.data);if("deposits"===s)e.status&&"subscribed"===e.status&&(this.depositConnected=!0),e.result&&e.result.hash&&(this.deposits=e.result);else{const s=e.type||e.data.type,t=e.result||e.data.result;s&&t&&(this[s]=t)}},i.onclose=()=>{this.isSocketOpen={...this.isSocketOpen,[s]:!1},this.intentionalClosure[s]||(console.log(`WebSocket connection for ${s} closed. Reconnecting...`),setTimeout((()=>{this.createSocket(s)}),5e3))},this.sockets={...this.sockets,[s]:i},this.subscriptions={...this.subscriptions,[s]:[]}},sendData(s,t){const e=this.sockets[s];e?.readyState===WebSocket.OPEN&&e.send(JSON.stringify(t))},subscribe(s,t){const e=this.sockets[s];t.type=s;const i=this.subscriptions[s]?.find((s=>JSON.stringify(s)===JSON.stringify(t)));if(!i&&e){const i=()=>{this.sendData(s,{method:"SUBSCRIBE",params:t}),this.subscriptions[s].push(t),e.removeEventListener("open",i)};e.readyState===WebSocket.OPEN?i():e.addEventListener("open",i)}},unsubscribe(s,t){if(t.type=s,this.sockets[s]?.readyState===WebSocket.OPEN){this.sendData(s,{method:"UNSUBSCRIBE",params:t});const e=this.subscriptions[s].indexOf(t);e>-1&&this.subscriptions[s].splice(e,1)}},closeSocket(s){this.intentionalClosure[s]=!0,this.sockets[s]&&(this.sockets[s].close(),delete this.sockets[s],delete this.isSocketOpen[s],delete this.subscriptions[s])}}});export{e as u};
