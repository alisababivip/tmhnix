import{Z as e}from"../e/entry-8qgg5CL-.js";function a(){return{...function(){const a=e().public.apiPath;return{getAdminP2POffers:async()=>await $fetch(`${a}/api/admin/p2p/offers`,{credentials:"include"}),getAdminP2POffer:async e=>await $fetch(`${a}/api/admin/p2p/offers/${e}`,{credentials:"include"}),updateAdminP2POffer:async(e,t)=>await $fetch(`${a}/api/admin/p2p/offers/${e}`,{method:"PUT",body:{status:t},credentials:"include"}),deleteAdminP2POffer:async e=>await $fetch(`${a}/api/admin/p2p/offers/${e}`,{method:"DELETE",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminP2PTrades:async()=>await $fetch(`${a}/api/admin/p2p/trades`,{credentials:"include"}),getAdminP2PTrade:async e=>await $fetch(`${a}/api/admin/p2p/trades/${e}`,{credentials:"include"}),updateAdminP2PTrade:async(e,t)=>await $fetch(`${a}/api/admin/p2p/trades/${e}`,{method:"PUT",body:{status:t},credentials:"include"}),cancelAdminP2PTrade:async e=>await $fetch(`${a}/api/admin/p2p/trades/${e}/cancel`,{method:"PUT",credentials:"include"}),completeAdminP2PTrade:async e=>await $fetch(`${a}/api/admin/p2p/trades/${e}/complete`,{method:"PUT",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminP2PReviews:async()=>await $fetch(`${a}/api/admin/p2p/reviews`,{credentials:"include"}),getAdminP2PReview:async e=>await $fetch(`${a}/api/admin/p2p/reviews/${e}`,{credentials:"include"}),deleteAdminP2PReview:async e=>await $fetch(`${a}/api/admin/p2p/reviews/${e}`,{method:"DELETE",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminP2PDisputes:async()=>await $fetch(`${a}/api/admin/p2p/disputes`,{credentials:"include"}),getAdminP2PDispute:async e=>await $fetch(`${a}/api/admin/p2p/disputes/${e}`,{credentials:"include"}),resolveAdminP2PDispute:async(e,t)=>await $fetch(`${a}/api/admin/p2p/disputes/${e}`,{method:"PUT",body:{resolution:t},credentials:"include"}),markAdminP2PDisputeAsResolved:async e=>await $fetch(`${a}/api/admin/p2p/disputes/${e}/markAsResolved`,{method:"PUT",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminPaymentMethods:async()=>await $fetch(`${a}/api/admin/p2p/payment-methods`,{credentials:"include"}),getAdminPaymentMethod:async e=>await $fetch(`${a}/api/admin/p2p/payment-methods/${e}`,{credentials:"include"}),createAdminPaymentMethod:async(e,t,i)=>await $fetch(`${a}/api/admin/p2p/payment-methods`,{method:"POST",body:{name:e,instructions:t,image:i},credentials:"include"}),updateAdminPaymentMethod:async(e,t,i,n,c,d)=>await $fetch(`${a}/api/admin/p2p/payment-methods/${e}`,{method:"PUT",body:{name:t,instructions:i,currency:n,image:c,status:d},credentials:"include"}),deleteAdminPaymentMethod:async e=>await $fetch(`${a}/api/admin/p2p/payment-methods/${e}`,{method:"DELETE",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminP2PEscrows:async()=>await $fetch(`${a}/api/admin/p2p/escrow`,{credentials:"include"}),getAdminP2PEscrow:async e=>await $fetch(`${a}/api/admin/p2p/escrow/${e}`,{credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getAdminP2pAnalytics:async()=>await $fetch(`${a}/api/admin/p2p/analytics`,{method:"GET",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getP2POffers:async()=>await $fetch(`${a}/api/p2p/offers`,{credentials:"include"}),getP2POffer:async e=>await $fetch(`${a}/api/p2p/offers/fetch/${e}`,{credentials:"include"}),getUserP2POffers:async()=>await $fetch(`${a}/api/p2p/offers/user`,{credentials:"include"}),getUserP2POffer:async e=>await $fetch(`${a}/api/p2p/offers/show/${e}`,{credentials:"include"}),createUserP2POffer:async(e,t,i,n,c,d,s,p)=>await $fetch(`${a}/api/p2p/offers`,{method:"POST",body:{wallet_type:e,currency:t,amount:i,price:n,payment_method_id:c,min_amount:d,max_amount:s,chain:p},credentials:"include"}),updateP2POffer:async(e,t)=>await $fetch(`${a}/api/p2p/offers/${e}`,{method:"PUT",body:{status:t},credentials:"include"}),editP2POffer:async(e,t,i)=>await $fetch(`${a}/api/p2p/offers/edit/${e}`,{method:"PUT",body:{min_amount:t,max_amount:i},credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getUserP2PTrades:async()=>await $fetch(`${a}/api/p2p/trades`,{credentials:"include"}),getUserP2PTrade:async e=>await $fetch(`${a}/api/p2p/trades/${e}`,{credentials:"include"}),createUserP2PTrade:async(e,t)=>await $fetch(`${a}/api/p2p/trades`,{method:"POST",body:{offer_id:e,amount:t},credentials:"include"}),sendMessage:async(e,t,i)=>await $fetch(`${a}/api/p2p/trades/${e}/chat`,{method:"POST",body:{message:t,isSeller:i},credentials:"include"}),cancelTrade:async e=>await $fetch(`${a}/api/p2p/trades/${e}/cancel`,{method:"POST",credentials:"include"}),markAsPaidTrade:async(e,t)=>await $fetch(`${a}/api/p2p/trades/${e}/markAsPaid`,{method:"POST",credentials:"include",body:{txHash:t}}),disputeTrade:async(e,t)=>await $fetch(`${a}/api/p2p/trades/${e}/dispute`,{method:"POST",credentials:"include",body:{reason:t}}),releaseTrade:async e=>await $fetch(`${a}/api/p2p/trades/${e}/release`,{method:"POST",credentials:"include"}),refundTrade:async e=>await $fetch(`${a}/api/p2p/trades/${e}/refund`,{method:"POST",credentials:"include"}),cancelDisputeTrade:async e=>await $fetch(`${a}/api/p2p/trades/${e}/cancelDispute`,{method:"POST",credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{createUserP2PReview:async(e,t,i)=>await $fetch(`${a}/api/p2p/reviews/${e}`,{method:"POST",body:{rating:t,comment:i},credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getUserDisputes:async()=>await $fetch(`${a}/api/p2p/disputes`,{credentials:"include"}),getUserDispute:async e=>await $fetch(`${a}/api/p2p/disputes/${e}`,{credentials:"include"}),createUserDispute:async(e,t)=>await $fetch(`${a}/api/p2p/disputes/create`,{method:"POST",body:{trade_id:e,reason:t},credentials:"include"})}}(),...function(){const a=e().public.apiPath;return{getUserPaymentMethods:async()=>await $fetch(`${a}/api/p2p/payment-methods`,{credentials:"include"}),getUserPaymentMethod:async e=>await $fetch(`${a}/api/p2p/payment-methods/${e}`,{credentials:"include"}),createUserPaymentMethod:async(e,t,i,n)=>await $fetch(`${a}/api/p2p/payment-methods`,{method:"POST",body:{name:e,instructions:t,currency:i,image:n},credentials:"include"}),deleteUserPaymentMethod:async e=>await $fetch(`${a}/api/p2p/payment-methods/${e}`,{method:"DELETE",credentials:"include"}),updateUserPaymentMethod:async(e,t,i,n,c)=>await $fetch(`${a}/api/p2p/payment-methods/${e}`,{method:"PUT",body:{name:t,instructions:i,currency:n,image:c},credentials:"include"})}}()}}export{a as u};
