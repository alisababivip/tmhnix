import{d as t,Z as s}from"../e/entry-8qgg5CL-.js";const e=t("socket",{state:()=>({sockets:{},tradeData:null,tickersData:null,subscriptions:{},isSocketOpen:{},intentionalClosure:{},isConnected:!1}),actions:{createSocket(t){if(this.intentionalClosure[t]=!1,this.isSocketOpen[t])return void console.log(`WebSocket connection for ${t} is already open`);const e=s(),i=new WebSocket(`${e.public.appWebSocketUrl}/exchange/${t}`);i.onopen=()=>{this.isSocketOpen={...this.isSocketOpen,[t]:!0},"tickers"===t&&this.sendData(t,{method:"SUBSCRIBE"})},i.onmessage=s=>{"trade"===t?this.tradeData=s.data:"tickers"===t&&(this.tickersData=s.data)},i.onclose=()=>{this.isSocketOpen={...this.isSocketOpen,[t]:!1},this.intentionalClosure[t]||(console.log(`WebSocket connection for ${t} closed. Reconnecting...`),setTimeout((()=>{this.createSocket(t)}),5e3))},this.sockets={...this.sockets,[t]:i},this.subscriptions={...this.subscriptions,[t]:[]}},sendData(t,s){const e=this.sockets[t];e?.readyState===WebSocket.OPEN&&e.send(JSON.stringify(s))},subscribe(t,s){this.sockets[t]?.readyState===WebSocket.OPEN&&(this.sendData(t,{method:"SUBSCRIBE",params:s}),this.subscriptions[t].push(s))},unsubscribe(t,s){if(this.sockets[t]?.readyState===WebSocket.OPEN){this.sendData(t,{method:"UNSUBSCRIBE",params:s});const e=this.subscriptions[t].indexOf(s);e>-1&&this.subscriptions[t].splice(e,1)}},closeSocket(t){this.intentionalClosure[t]=!0,this.sockets[t]&&("tickers"===t&&this.sendData(t,{method:"UNSUBSCRIBE"}),this.sockets[t].close(),delete this.sockets[t],delete this.isSocketOpen[t],delete this.subscriptions[t])}}});export{e as u};
